name: Deployment (Container)

on:
  push:
    branches:
      - master
      - dev

env:
  CACHE_KEY: node-deps

jobs:
  test:
    runs-on: ubuntu-latest
    # container:
    #   image: node:16
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb
      MONGODB_CLUSTER_ADDRESS: 127.0.0.1:27017
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      PORT: 8080
    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Debug Environment Variables
        run: |
          echo "MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}"
          echo "MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}"
          echo "MONGODB_CLUSTER_ADDRESS: ${{ env.MONGODB_CLUSTER_ADDRESS }}"

      - name: Debug MONGO_URI
        run: |
          export MONGO_URI="${{ env.MONGODB_CONNECTION_PROTOCOL }}://${{ secrets.MONGODB_USERNAME }}:${{ secrets.MONGODB_PASSWORD }}@${{ env.MONGODB_CLUSTER_ADDRESS }}/?retryWrites=true&w=majority"
          echo "Generated MongoDB URI: $MONGO_URI"

      - name: Run server
        run: |
          echo "Starting server on port $PORT..."
          if [[ -z "${{ secrets.MONGODB_USERNAME }}" || -z "${{ secrets.MONGODB_PASSWORD }}" ]]; then
            echo "Error: MongoDB credentials are missing!"
            exit 1
          fi
          export MONGO_URI="${{ env.MONGODB_CONNECTION_PROTOCOL }}://${{ secrets.MONGODB_USERNAME }}:${{ secrets.MONGODB_PASSWORD }}@${{ env.MONGODB_CLUSTER_ADDRESS }}/?retryWrites=true&w=majority"
          echo "MongoDB URI: $MONGO_URI"
          npm start &
          npx wait-on http://127.0.0.1:$PORT

      - name: Run tests
        run: npm test

      - name: Output information
        run: |
          echo "MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}"
          echo "MONGODB_CLUSTER_ADDRESS: ${{ env.MONGODB_CLUSTER_ADDRESS }}"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |
          echo "MONGODB_CLUSTER_ADDRESS: $MONGODB_CLUSTER_ADDRESS"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "PORT: $PORT"
